{"version":3,"sources":["components/Resume.jsx","components/FeedPost.jsx","utils/getUsers.js","utils/getPhotos.js","components/Feed.jsx","components/Recommended.jsx","App.js","reportWebVitals.js","index.js"],"names":["Resume","props","size","fontSize","userData","style","name","nick","photoUrl","className","src","FeedPost","postData","postPhotoUrl","a","n","axios","get","resp","usersRawData","data","results","getUsers","getPhotos","Feed","useState","posts","setPosts","fetchData","newPosts","photosRawData","console","log","i","userRawData","photoRawData","first","last","email","replace","picture","thumbnail","photoLargeUrl","large","download_url","push","useEffect","ViewportDiv","handleViewport","ref","forwardedRef","height","onEnterViewport","Recommended","usersResumes","setUsersResumes","newUsersResumes","Header","Layout","Sider","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab6e5041.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Avatar } from 'antd';\r\nimport './Resume.scss'\r\n\r\nfunction Resume(props) {\r\n  const {userData={}, style={}} = props\r\n  const {\r\n    name=\"Juana Lopez\", \r\n    nick=\"juana.lopz\", \r\n    photoUrl=\"https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg.jpg\"\r\n  } = userData\r\n\r\n  let size\r\n  let fontSize\r\n  \r\n  if(props.size && props.size === \"sm\"){\r\n    size = 40\r\n    fontSize = 12\r\n  } else {\r\n    size = 60\r\n    fontSize = 14\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume\" style={style}>\r\n      <Avatar size={size} src={photoUrl}/>\r\n      <div className=\"resume-data\">\r\n        <div className=\"resume-data-cont\">\r\n          <p className=\"nickname\" style={{fontSize: fontSize}}>{nick}</p>\r\n          <p className=\"fullname\" style={{fontSize: fontSize}}>{name}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport './FeedPost.scss'\r\nimport Resume from './Resume';\r\n\r\nfunction FeedPost(props) {\r\n  const {postData={}} = props\r\n  const {userData={}, postPhotoUrl=\"\"} = postData\r\n  return (\r\n    <div className=\"feed-post\">\r\n      <div>\r\n        <Resume userData={userData} size=\"sm\"/>\r\n        <img src={postPhotoUrl} className=\"post-photo\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedPost;","import axios from 'axios';\r\n\r\nasync function getUsers(n=1) {\r\n  const resp = await axios.get(`https://randomuser.me/api/?results=${n}`)\r\n  const usersRawData = resp.data.results\r\n  return usersRawData\r\n}\r\n\r\nexport default getUsers","import axios from \"axios\";\r\n\r\nasync function getPhotos(n=1){\r\n  const resp = await axios.get(`https://picsum.photos/v2/list?limit=${n}`)\r\n  return(resp.data)\r\n}\r\n\r\nexport default getPhotos","import React, { useEffect, useState } from 'react';\r\nimport FeedPost from './FeedPost';\r\nimport getUsers from '../utils/getUsers';\r\nimport getPhotos from '../utils/getPhotos';\r\nimport handleViewport from 'react-in-viewport';\r\n\r\nfunction Feed(props) {\r\n  const [posts, setPosts] = useState([])\r\n\r\n  const fetchData = async () => {\r\n    const newPosts = []\r\n    const usersRawData = await getUsers(5)\r\n    const photosRawData = await getPhotos(5)\r\n    console.log(usersRawData)\r\n    for(let i = 0; i < 5; i++){\r\n      const userRawData = usersRawData[i]\r\n      const photoRawData = photosRawData[i]\r\n      const postData = {\r\n        userData: {\r\n          name: userRawData.name.first + \" \" + userRawData.name.last,\r\n          nick: userRawData.email.replace(/@[\\w\\d\\s.]+/ig,\"\"),\r\n          photoUrl: userRawData.picture.thumbnail,\r\n          photoLargeUrl: userRawData.picture.large\r\n        },\r\n        postPhotoUrl: photoRawData.download_url\r\n      }\r\n  \r\n      newPosts.push(\r\n        <FeedPost key={postData.userData.name + postData.postPhotoUrl} postData={postData}/>\r\n      )\r\n    }\r\n    setPosts([...posts, ...newPosts])\r\n  }\r\n\r\n  useEffect(()=>{\r\n    fetchData()\r\n  }, [])\r\n  \r\n  const ViewportDiv = handleViewport((props) => <div ref={props.forwardedRef} style={{height:1}}/>)\r\n\r\n  return (\r\n    <div>\r\n      {posts}\r\n      <ViewportDiv onEnterViewport={() => {\r\n        if(posts[0]){\r\n          console.log(\"fetching\");\r\n          fetchData()\r\n        }\r\n      }}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;","import React, { useEffect, useState } from 'react';\r\nimport getUsers from '../utils/getUsers';\r\nimport './Recommended.scss';\r\nimport Resume from './Resume';\r\n\r\nfunction Recommended(props) {\r\n  \r\n  const [usersResumes, setUsersResumes] = useState([])\r\n\r\n  useEffect(()=>{\r\n    async function fetchData(){\r\n      const usersRawData = await getUsers(5)\r\n      const newUsersResumes = []\r\n      for(const userRawData of usersRawData){\r\n        const userData = {\r\n          name: userRawData.name.first + \" \" + userRawData.name.last,\r\n          nick: userRawData.email.replace(/@[\\w\\d\\s.]+/ig,\"\"),\r\n          photoUrl: userRawData.picture.thumbnail\r\n        }\r\n        newUsersResumes.push(\r\n          <Resume key={userData.name} userData={userData} size=\"sm\"/>\r\n        )\r\n      }\r\n      setUsersResumes(newUsersResumes)\r\n    }\r\n    fetchData()\r\n  },[])\r\n  \r\n\r\n  return (\r\n    <div className=\"recom\">\r\n      <h4>Sugerencias para ti</h4>\r\n      {usersResumes}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recommended;","import './App.scss';\nimport 'antd/dist/antd.css';\nimport { Layout } from 'antd';\nimport Feed from './components/Feed';\nimport Recommended from './components/Recommended';\nimport Resume from './components/Resume';\nconst { Header, Sider, Content } = Layout;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Header>Header</Header>\n        <Layout className=\"inner-layout\">\n          <Content>\n            <Feed/>\n          </Content>\n          <Sider>\n            <div className=\"sider-content\">\n              <Resume/>\n              <Recommended/>\n            </div>\n          </Sider>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}